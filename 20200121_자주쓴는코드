# 시작할때
import numpy
import os
print(os.getcwd())

# glob으로 파일리스트 불러오기
import glob
path = 'D:/폴더이름/*'
file_list= glob.glob(path)
img_list=[]
for file in file_list:
    if file.endswith(".png"):
        print(file)
        path_name =file.split('\\')[0]
        name =file.split('\\')[1]
        img_list.append(name)
        
# 파일 오픈
f_1=open('D:\\파일이름.txt','r')

anno_list=[] 
count =0
for line in f_1:  
    if ~line.find('Name='):
#         line.split('Name=')[1].split('\n')[0]
        anno_list.append(line.split('Name=')[1].split('\n')[0])
        count =count+1
        continue
    else:
        count =count+1

print(anno_list,len(anno_list))
f_1.close()

#png to jpg 
# 참고: https://gist.github.com/abhbtbb/1cd050f001980ba5b306b293a7b2b0ca
# -*-coding:utf-8 -*-
from PIL import Image

def resize(png_path, base_width):
    img = Image.open(png_path)
    wpercent = (base_width / float(img.size[0]))
    hsize = int((float(img.size[1]) * float(wpercent)))
    resized_img = img.resize((base_width, hsize), Image.ANTIALIAS)
    return resized_img

def png_to_jpg(png_path, target_img):
    fill_color = None
    img = target_img
    jpg_path = png_path[:-4]+'.jpg'

    if img.mode in ('RGBA', 'LA'):
        background = Image.new(img.mode[:-1], img.size, fill_color)
        background.paste(img, img.split()[-1])
        img = background

    img.save(jpg_path, 'JPEG')

def resize_png2jpg(png_path, base_width):
    img = resize(png_path, base_width)
    png_to_jpg(png_path, img)
        
resize_png2jpg("people.png", 1600)        

# 파일명 바꾸기
os.rename(path+old_file_name, path+new_file_name)
예시:os.rename(file, path_name+'\\'+new_name)

# 파일 삭제 하기

# 입력받아 처리하기
new_name = input('입력')
new_name_ = new_name+'a'

# 이미지 edge에지 강조
img = cv2.imread(이미지)
sharpening_2 = np.array([[-1, -1, -1, -1, -1], [-1, 2, 2, 2, -1],
                                 [-1, 2, 9, 2, -1], [-1, 2, 2, 2, -1],
                                 [-1, -1, -1, -1, -1]]) / 9.0
img_out = cv2.filter2D(img , -1, sharpening_2)

# for문 마다 변수이름 바꾸기
for i in range(0,len(coco_kps.loadAnns(annIds))):
    globals()['personkey_{}'.format(i)]=coco_kps.loadAnns(annIds)[i]['keypoints']
